Hands on Practice on Hash Table -

Crud Operations For - 
to Create/Update => use tb.put()  // to update or add the value so it overrides the current one .
to Delete => use tb.remove()
to check if key is present => tb.containsKey()
to check if contains value => tb.containsValue()
to Check size of hashtable => tb.size()

Sample Program -  

import java.util.Hashtable;

public class HashTableP {
    public static void main(String[] args) {

        Hashtable<Integer,String>  ht = new Hashtable<>();

        ht.put(10,"Ashpak");
        ht.put(11,"Sandeep");
        ht.put(12,"Rushikesh");
        ht.put(14,"Sourup");
        ht.put(7,"Vighnesh");
        ht.put(19,"Krishna");

        ht.remove(12);
        System.out.println(ht.containsKey(3));
        System.out.println(ht.containsValue("Ashpak"));
        System.out.println(ht.size());
        System.out.println(ht);

        for (Integer pt : ht.keySet()){
            System.out.println(pt);                                 //Prints all the keys by taking pt as a pointer.
        }
        for (String pt : ht.values()){
            System.out.println(pt);                                 //Prints all the values by taking pt as a pointer
        }
        for (Map.Entry<Integer,String> pt:ht.entrySet()){
            System.out.println(pt.getKey()+ " " +pt.getValue());    //Prints all the Values and keys together by taking pt as a pointer.
        }
    }
}
